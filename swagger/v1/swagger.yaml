---
openapi: 3.0.1
info:
  title: API V1
  version: v1
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
paths:
  "/authentication/login":
    post:
      summary: Logs in a user
      description: To Use The Below Rotues Login First!
      tags: 
      - Authentication
      parameters: []
      responses:
        '200':
          description: You have logged in successfully
        '400':
          description: Invalid credentials
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      default: moyukh00145@gmail.com
                    password:
                      type: string
                      default: '123456'
              required:
              - email
              - password
        required: true
  "/documents":
    get:
      summary: list documents
      tags:
      - Documents
      security:
      - bearerAuth: []
      responses:
        '200':
          description: successful
    post:
      summary: create document
      tags:
        - Documents
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: successful
        '422':
          description: unprocessable entity
        '500'
          description: Internal server error
  "/documents/{id}":
    get:
      summary: show document
      tags:
      - Documents
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        description: Document ID
        required: true
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: document not found
        '500'
          description: Internal server error
    parameters:
    - name: id
      in: path
      description: id
      required: true
      schema:
        type: string
  "/users/{user_id}/posts":
    get:
      summary: Retrieves all posts for a user
      tags:
      - Posts
      security:
      - bearerAuth: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: posts found
        '404':
          description: user not found
        '500'
          description: internal server error
    post:
      summary: Creates a post for a user
      tags:
      - Posts
      security:
      - bearerAuth: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '201':
          description: post created
        '422':
          description: unprocessable_entity
        '500'
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                post:
                  type: object
                  properties:
                    title:
                      type: string
                    content:
                      type: string
              required:
              - title
              - content
  "/users/{user_id}/posts/{id}":
    get:
      summary: Retrieves a post for a user
      tags:
      - Posts
      security:
      - bearerAuth: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: post found
        '404':
          description: post not found
        '500'
          description: Internal server error
    put:
      summary: Updates a post for a user
      tags:
      - Posts
      security:
      - bearerAuth: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: post updated
        '404':
          description: post not found
        '500'
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                post:
                  type: object
                  properties:
                    title:
                      type: string
                    content:
                      type: string
              required:
              - title
              - content
    delete:
      summary: Deletes a post for a user
      tags:
      - Posts
      security:
      - bearerAuth: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: post deleted
        '404':
          description: post not found
        '500'
          description: Internal server error
  "/users/{user_id}/posts/create_csv":
    get:
      summary: Generates CSV for all posts of a user
      tags:
      - Posts
      security:
      - bearerAuth: []
      parameters:
      - name: user_id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: CSV generated
        '404':
          description: user not found
        '500'
          description: Internal server error
  "/users":
    get:
      summary: Retrieves all users
      tags:
      - Users
      security:
      - bearerAuth: []
      responses:
        '200':
          description: users found
        '404':
          description: user not found
        '500'
          description: internal server error
    post:
      summary: Creates a user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters: []
      responses:
        '200':
          description: user created successfully
        '422':
          description: unprocessable_entity
        '500'
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
              required:
              - first_name
              - last_name
              - email
              - password
  "/users/{id}":
    get:
      summary: Retrieves a user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: user found
        '404':
          description: user not found
        '500'
          description: Internal server error
    put:
      summary: Updates a user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '200':
          description: user updated
        '404':
          description: user not found
        '500'
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    first_name:
                      type: string
                    last_name:
                      type: string
                    email:
                      type: string
                    password:
                      type: string
              required:
              - first_name
              - last_name
              - email
              - password
    delete:
      summary: Deletes a user
      tags:
      - Users
      security:
      - bearerAuth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '204':
          description: user deleted
        '404':
          description: user not found
        '500'
          description: Internal server error
  "/words/meaning":
    get:
      summary: meaning word
      tags:
      - Words
      security:
      - bearerAuth: []
      parameters:
      - name: word
        in: query
        required: true
        description: Word to get meaning
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: Word not found in the dictionary
        '500'
          description: Internal server error
  "/words/synonym":
    get:
      summary: synonym word
      tags:
      - Words
      security:
      - bearerAuth: []
      parameters:
      - name: word
        in: query
        required: true
        description: Word to get synonyms
        schema:
          type: string
      responses:
        '200':
          description: successful
        '404':
          description: Word not found in the dictionary
        '500'
          description: Internal server error
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
